{"ast":null,"code":"var _jsxFileName = \"C:\\\\Javascript repozytoria\\\\Projects\\\\React-zakupownik\\\\zakupownik\\\\src\\\\components\\\\Header\\\\Header.js\";\nimport React from 'react';\nimport styles from './Header.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSearchPhraseChange = event => {\n      this.setState({\n        searchPhrase: event.target.value\n      }, () => this.filterVehicles());\n    };\n    this.handleOnlyCarsChange = event => {\n      this.setState({\n        searchOnlyCars: event.target.checked\n      }, () => this.filterVehicles());\n    };\n    this.handleSelectEngineType = event => {\n      this.setState({\n        searchEngineType: event.target.value\n      }, () => this.filterVehicles());\n    };\n    this.filterVehicles = () => {\n      const {\n        produkty\n      } = this.props;\n      const {\n        searchPhrase,\n        searchOnlyCars,\n        searchEngineType\n      } = this.state;\n\n      // odfiltrowanie zgodnych wynik贸w\n      let filteredVehicles = produkty.filter(produkty => produkty.nazwa.includes(searchPhrase));\n      if (searchOnlyCars) {\n        filteredVehicles = filteredVehicles.filter(produkty => produkty.kategoria === 'car');\n      }\n      // if (searchEngineType) {\n      //   filteredVehicles = filteredVehicles.filter(\n      //     (produkty) => produkty.engineType === searchEngineType\n      //   );\n      // }\n      console.log('sprawdzam aktualne filtry', filteredVehicles);\n      // przekazanie wyfiltrowanych pojazd贸w do komponentu rodzica (App)\n      this.props.sendFilteredVehiclesToParentComponent(filteredVehicles);\n    };\n    this.handleResetFilters = () => {\n      this.setState({\n        searchPhrase: '',\n        searchOnlyCars: false,\n        searchEngineType: ''\n      }, () => {\n        this.filterVehicles();\n      });\n    };\n    this.getUniqueVehicleEngineTypes = () => {\n      const {\n        produkty\n      } = this.props;\n      const vehicleEngineList = produkty.map(produkty => vehicle.engineType);\n      const uniqueVehicleEngineList = [...new Set(vehicleEngineList)];\n      return uniqueVehicleEngineList;\n    };\n    this.state = {\n      searchPhrase: '',\n      searchOnlyCars: false,\n      searchEngineType: ''\n    };\n  }\n  render() {\n    const uniqueVehicleEngineTypes = this.getUniqueVehicleEngineTypes();\n    const {\n      searchPhrase,\n      searchOnlyCars,\n      searchEngineType\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.HeaderWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchPhrase,\n        onChange: this.handleSearchPhraseChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Tylko samochody \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: this.handleOnlyCarsChange,\n        value: searchOnlyCars\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Typ silnika \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: searchEngineType,\n        onChange: this.handleSelectEngineType,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: '',\n          children: \"All types\"\n        }, 'all', false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), uniqueVehicleEngineTypes.map(engineType => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: engineType,\n          children: engineType\n        }, engineType, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleResetFilters,\n        children: \"Zresetuj filtry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Header;","map":{"version":3,"names":["React","styles","Header","Component","constructor","props","handleSearchPhraseChange","event","setState","searchPhrase","target","value","filterVehicles","handleOnlyCarsChange","searchOnlyCars","checked","handleSelectEngineType","searchEngineType","produkty","state","filteredVehicles","filter","nazwa","includes","kategoria","console","log","sendFilteredVehiclesToParentComponent","handleResetFilters","getUniqueVehicleEngineTypes","vehicleEngineList","map","vehicle","engineType","uniqueVehicleEngineList","Set","render","uniqueVehicleEngineTypes","HeaderWrapper"],"sources":["C:/Javascript repozytoria/Projects/React-zakupownik/zakupownik/src/components/Header/Header.js"],"sourcesContent":["import React from 'react';\r\nimport styles from './Header.module.scss';\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchPhrase: '',\r\n      searchOnlyCars: false,\r\n      searchEngineType: '',\r\n    };\r\n  }\r\n\r\n  handleSearchPhraseChange = (event) => {\r\n    this.setState({ searchPhrase: event.target.value }, () =>\r\n      this.filterVehicles()\r\n    );\r\n  };\r\n\r\n  handleOnlyCarsChange = (event) => {\r\n    this.setState({ searchOnlyCars: event.target.checked }, () =>\r\n      this.filterVehicles()\r\n    );\r\n  };\r\n\r\n  handleSelectEngineType = (event) => {\r\n    this.setState({ searchEngineType: event.target.value }, () =>\r\n      this.filterVehicles()\r\n    );\r\n  };\r\n\r\n  filterVehicles = () => {\r\n    const { produkty } = this.props;\r\n    const { searchPhrase, searchOnlyCars, searchEngineType } = this.state;\r\n\r\n    // odfiltrowanie zgodnych wynik贸w\r\n    let filteredVehicles = produkty.filter((produkty) =>\r\n    produkty.nazwa.includes(searchPhrase)\r\n    );\r\n    if (searchOnlyCars) {\r\n      filteredVehicles = filteredVehicles.filter(\r\n        (produkty) => produkty.kategoria === 'car'\r\n      );\r\n    }\r\n    // if (searchEngineType) {\r\n    //   filteredVehicles = filteredVehicles.filter(\r\n    //     (produkty) => produkty.engineType === searchEngineType\r\n    //   );\r\n    // }\r\n    console.log('sprawdzam aktualne filtry', filteredVehicles);\r\n    // przekazanie wyfiltrowanych pojazd贸w do komponentu rodzica (App)\r\n    this.props.sendFilteredVehiclesToParentComponent(filteredVehicles);\r\n  };\r\n\r\n  handleResetFilters = () => {\r\n    this.setState(\r\n      {\r\n        searchPhrase: '',\r\n        searchOnlyCars: false,\r\n        searchEngineType: '',\r\n      },\r\n      () => {\r\n        this.filterVehicles();\r\n      }\r\n    );\r\n  };\r\n\r\n  getUniqueVehicleEngineTypes = () => {\r\n    const { produkty } = this.props;\r\n    const vehicleEngineList = produkty.map((produkty) => vehicle.engineType);\r\n    const uniqueVehicleEngineList = [...new Set(vehicleEngineList)];\r\n    return uniqueVehicleEngineList;\r\n  };\r\n\r\n  render() {\r\n    const uniqueVehicleEngineTypes = this.getUniqueVehicleEngineTypes();\r\n    const { searchPhrase, searchOnlyCars, searchEngineType } = this.state;\r\n    return (\r\n      <div className={styles.HeaderWrapper}>\r\n        <input\r\n          value={searchPhrase}\r\n          onChange={this.handleSearchPhraseChange}\r\n        ></input>\r\n        <p> Tylko samochody </p>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={this.handleOnlyCarsChange}\r\n          value={searchOnlyCars}\r\n        ></input>\r\n        <p> Typ silnika </p>\r\n        <select value={searchEngineType} onChange={this.handleSelectEngineType}>\r\n          <option key={'all'} value={''}>\r\n            All types\r\n          </option>\r\n          {uniqueVehicleEngineTypes.map((engineType) => (\r\n            <option key={engineType} value={engineType}>\r\n              {engineType}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {/* <button onClick={this.filterVehicles}>Wyszukaj</button> */}\r\n        <button onClick={this.handleResetFilters}>Zresetuj filtry</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AAAC;AAE1C,MAAMC,MAAM,SAASF,KAAK,CAACG,SAAS,CAAC;EACnCC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAQfC,wBAAwB,GAAIC,KAAK,IAAK;MACpC,IAAI,CAACC,QAAQ,CAAC;QAAEC,YAAY,EAAEF,KAAK,CAACG,MAAM,CAACC;MAAM,CAAC,EAAE,MAClD,IAAI,CAACC,cAAc,EAAE,CACtB;IACH,CAAC;IAAA,KAEDC,oBAAoB,GAAIN,KAAK,IAAK;MAChC,IAAI,CAACC,QAAQ,CAAC;QAAEM,cAAc,EAAEP,KAAK,CAACG,MAAM,CAACK;MAAQ,CAAC,EAAE,MACtD,IAAI,CAACH,cAAc,EAAE,CACtB;IACH,CAAC;IAAA,KAEDI,sBAAsB,GAAIT,KAAK,IAAK;MAClC,IAAI,CAACC,QAAQ,CAAC;QAAES,gBAAgB,EAAEV,KAAK,CAACG,MAAM,CAACC;MAAM,CAAC,EAAE,MACtD,IAAI,CAACC,cAAc,EAAE,CACtB;IACH,CAAC;IAAA,KAEDA,cAAc,GAAG,MAAM;MACrB,MAAM;QAAEM;MAAS,CAAC,GAAG,IAAI,CAACb,KAAK;MAC/B,MAAM;QAAEI,YAAY;QAAEK,cAAc;QAAEG;MAAiB,CAAC,GAAG,IAAI,CAACE,KAAK;;MAErE;MACA,IAAIC,gBAAgB,GAAGF,QAAQ,CAACG,MAAM,CAAEH,QAAQ,IAChDA,QAAQ,CAACI,KAAK,CAACC,QAAQ,CAACd,YAAY,CAAC,CACpC;MACD,IAAIK,cAAc,EAAE;QAClBM,gBAAgB,GAAGA,gBAAgB,CAACC,MAAM,CACvCH,QAAQ,IAAKA,QAAQ,CAACM,SAAS,KAAK,KAAK,CAC3C;MACH;MACA;MACA;MACA;MACA;MACA;MACAC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEN,gBAAgB,CAAC;MAC1D;MACA,IAAI,CAACf,KAAK,CAACsB,qCAAqC,CAACP,gBAAgB,CAAC;IACpE,CAAC;IAAA,KAEDQ,kBAAkB,GAAG,MAAM;MACzB,IAAI,CAACpB,QAAQ,CACX;QACEC,YAAY,EAAE,EAAE;QAChBK,cAAc,EAAE,KAAK;QACrBG,gBAAgB,EAAE;MACpB,CAAC,EACD,MAAM;QACJ,IAAI,CAACL,cAAc,EAAE;MACvB,CAAC,CACF;IACH,CAAC;IAAA,KAEDiB,2BAA2B,GAAG,MAAM;MAClC,MAAM;QAAEX;MAAS,CAAC,GAAG,IAAI,CAACb,KAAK;MAC/B,MAAMyB,iBAAiB,GAAGZ,QAAQ,CAACa,GAAG,CAAEb,QAAQ,IAAKc,OAAO,CAACC,UAAU,CAAC;MACxE,MAAMC,uBAAuB,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACL,iBAAiB,CAAC,CAAC;MAC/D,OAAOI,uBAAuB;IAChC,CAAC;IAlEC,IAAI,CAACf,KAAK,GAAG;MACXV,YAAY,EAAE,EAAE;MAChBK,cAAc,EAAE,KAAK;MACrBG,gBAAgB,EAAE;IACpB,CAAC;EACH;EA+DAmB,MAAM,GAAG;IACP,MAAMC,wBAAwB,GAAG,IAAI,CAACR,2BAA2B,EAAE;IACnE,MAAM;MAAEpB,YAAY;MAAEK,cAAc;MAAEG;IAAiB,CAAC,GAAG,IAAI,CAACE,KAAK;IACrE,oBACE;MAAK,SAAS,EAAElB,MAAM,CAACqC,aAAc;MAAA,wBACnC;QACE,KAAK,EAAE7B,YAAa;QACpB,QAAQ,EAAE,IAAI,CAACH;MAAyB;QAAA;QAAA;QAAA;MAAA,QACjC,eACT;QAAA,UAAG;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAI,eACxB;QACE,IAAI,EAAC,UAAU;QACf,QAAQ,EAAE,IAAI,CAACO,oBAAqB;QACpC,KAAK,EAAEC;MAAe;QAAA;QAAA;QAAA;MAAA,QACf,eACT;QAAA,UAAG;MAAa;QAAA;QAAA;QAAA;MAAA,QAAI,eACpB;QAAQ,KAAK,EAAEG,gBAAiB;QAAC,QAAQ,EAAE,IAAI,CAACD,sBAAuB;QAAA,wBACrE;UAAoB,KAAK,EAAE,EAAG;UAAA,UAAC;QAE/B,GAFa,KAAK;UAAA;UAAA;UAAA;QAAA,QAET,EACRqB,wBAAwB,CAACN,GAAG,CAAEE,UAAU,iBACvC;UAAyB,KAAK,EAAEA,UAAW;UAAA,UACxCA;QAAU,GADAA,UAAU;UAAA;UAAA;UAAA;QAAA,QAGxB,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACK,eAET;QAAQ,OAAO,EAAE,IAAI,CAACL,kBAAmB;QAAA,UAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9D;EAEV;AACF;AAEA,eAAe1B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}